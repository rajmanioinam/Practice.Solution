@model Practice.MVC.Models.Fruit

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>
@*<link href="../../Content/Site.css" rel="stylesheet" />
<link href="../../Content/themes/base/jquery-ui.css" rel="stylesheet" />
<script src="../../Scripts/jquery-1.12.4.js"></script>
<script src="../../Scripts/jquery-ui-1.12.1.js"></script>
<script type="text/javascript">
    $(document).ready(function () {     
        $("#datepicker1").datepicker();
    });
</script>*@
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <p>Date: <input type="text" id="datepicker1"></p>

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.FruitId)

        <div class="form-group">
            @Html.LabelFor(model => model.FruitId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FruitId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FruitName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FruitName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FruitName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FruitName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Color, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Color, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Color, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Preference, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Preference", new List<SelectListItem> {
           new SelectListItem{Text="1", Value="1"},
           new SelectListItem{Text="2", Value="2"},
           new SelectListItem{Text="3", Value="3"},
           new SelectListItem{Text="4", Value="4"},
           new SelectListItem{Text="5", Value="5"},
           new SelectListItem{Text="6", Value="6"},
           new SelectListItem{Text="7", Value="7"},
           new SelectListItem{Text="8", Value="8"},
           new SelectListItem{Text="9", Value="9"},
           new SelectListItem{Text="10", Value="10"},

       }, "Select Preference", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Preference, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.UpdatedDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UpdatedDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UpdatedDate, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model=>model.FruitImage, htmlAttributes: new { @class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model=>model.FruitImage, new { htmlAttributes = new { @class = "form-control"}})
                @Html.ValidationMessageFor(model=>model.FruitImage, "", new { @class= "text-danger"})
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
